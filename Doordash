<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>DoorDash Hourly Pay Calculator</title>
  <style>
    :root{
      --bg:#f6f6f6;--text:#111;--muted:#6b7280;--card:#fff;--line:#e5e7eb;
      --good:#059669;--bad:#dc2626;
    }
    html,body{margin:0;padding:0;background:var(--bg);color:var(--text);font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;}
    .container{max-width:720px;margin:0 auto;padding:16px 16px 120px;}
    h1{font-size:20px;margin:8px 0 12px;}
    .header{position:sticky;top:0;z-index:10;margin:0 -16px 12px;padding:12px 16px;background:rgba(246,246,246,.9);backdrop-filter:saturate(180%) blur(6px);border-bottom:1px solid var(--line);display:flex;align-items:center;justify-content:space-between}
    .badge{font-size:12px;color:#fff;padding:4px 8px;border-radius:999px}
    .card{background:var(--card);border:1px solid var(--line);border-radius:16px;padding:14px;box-shadow:0 1px 2px rgba(0,0,0,.04);margin-bottom:12px}
    .stat .k{font-size:11px;color:var(--muted);letter-spacing:.04em;text-transform:uppercase;margin-bottom:4px}
    .stat .v{font-size:22px;font-variant-numeric:tabular-nums lining-nums}
    .stat .s{font-size:12px;color:var(--muted);margin-top:4px}
    .btn{border:1px solid #d1d5db;border-radius:12px;padding:10px 12px;font-size:16px;background:#fff;cursor:pointer;width:100%}
    .btn:hover{background:#f0f0f0}
    .footer{position:fixed;left:0;right:0;bottom:0;background:#fff;border-top:1px solid var(--line);padding:12px}
    .footer .inner{max-width:720px;margin:0 auto;display:flex;gap:10px}
    .accept{flex:1;border-radius:16px;padding:14px 16px;color:#fff;border:none;font-weight:600}
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>DoorDash Hourly Pay Calculator</h1>
      <span id="badge" class="badge">Checkingâ€¦</span>
    </div>
    <div id="app"></div>
  </div>
  <script>
    // --- Inputs (via simple prompts for quick use) ---
    const targetHourly = 25; // Your minimum acceptable $/hr
    const payoutInput = prompt("Enter payout ($)");
    const distanceInput = prompt("Enter distance (miles)");
    const speed = 30; // mph average (adjust in code if needed)
    const extraMinutes = 10; // default overhead (adjust in code if needed)

    const payout = parseFloat(payoutInput)||0;
    const distance = parseFloat(distanceInput)||0;

    // --- Calculations ---
    const driveTime = (distance/speed)*60;      // minutes
    const totalTime = driveTime + extraMinutes; // minutes
    const hours = totalTime/60;
    const hourlyRate = hours>0? payout/hours:0;
    const perMile = distance>0? payout/distance:0;
    const isGood = hourlyRate >= targetHourly;

    // --- Render ---
    const decisionColor = isGood ? "var(--good)" : "var(--bad)";
    const decisionWord  = isGood ? "TAKE IT" : "SKIP IT";
    const badge = document.getElementById('badge');
    badge.textContent = isGood ? "Meets target" : "Below target";
    badge.style.background = decisionColor;

    document.getElementById('app').innerHTML = `
      <div class='card stat' style='border-left:8px solid ${decisionColor}'>
        <div class='k'>Decision</div>
        <div class='v' style='font-size:26px;font-weight:700;color:${decisionColor}'>${decisionWord}</div>
        <div class='s'>Target $${targetHourly}/hr â€” You are ${isGood ? "at or above" : "below"} target.</div>
      </div>

      <div class='card stat'>
        <div class='k'>Hourly Rate</div>
        <div class='v'>$${hourlyRate.toFixed(2)}/hr</div>
        <div class='s'>Includes ${extraMinutes} min overhead</div>
      </div>

      <div class='card stat'>
        <div class='k'>Pay per Mile</div>
        <div class='v'>$${perMile.toFixed(2)}/mi</div>
        <div class='s'>${distance.toFixed(1)} miles @ ${speed} mph</div>
      </div>

      <div class='card stat'>
        <div class='k'>Total Time</div>
        <div class='v'>${totalTime.toFixed(0)} min</div>
        <div class='s'>Drive ${driveTime.toFixed(0)}m + Extra ${extraMinutes}m</div>
      </div>

      <button id='reset' class='btn'>Reset</button>
    `;

    // --- Interactions ---
    document.getElementById('reset').addEventListener('click', () => location.reload());
  </script>
</body>
</html>
